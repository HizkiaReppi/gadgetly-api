// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String    @db.VarChar(100)
  username      String    @unique @db.VarChar(50)
  email         String    @unique @db.VarChar(255)
  password      String    @db.VarChar(255)
  role          UserRole  @default(USER)
  last_login    DateTime? @db.Timestamp
  refresh_token String?   @db.VarChar(255)
  photo         String?   @db.VarChar(255)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  @@map("users")
}

model Category {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  products    Product[]

  @@map("categories")
}

model Product {
  id             String           @id @default(uuid())
  category_id    Int
  title          String
  description    String?
  price          Decimal          @db.Decimal(10, 2)
  condition      Condition
  model          String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  images         ProductImage[]
  category       Category         @relation(fields: [category_id], references: [id])
  specifications Specification[]

  @@map("products")
}

model ProductImage {
  id            Int         @id @default(autoincrement())
  product_id    String
  image_url     String
  product       Product     @relation(fields: [product_id], references: [id])

  @@index([product_id])
  @@map("product_images")
}

model Specification {
  id         Int      @id @default(autoincrement())
  product_id String
  name       String
  value      String
  product    Product  @relation(fields: [product_id], references: [id])

  @@index([product_id])
  @@map("specifications")
}

enum UserRole {
  USER
  ADMIN
}

enum Condition {
  NEW
  NORMAL
  REFURBISHED
}
